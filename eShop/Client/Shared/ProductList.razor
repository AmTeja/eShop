@inject IProductService ProductService

@if(ProductService.Products == null || ProductService.Products.Count == 0)
{
    <span>Loading Products...</span>
}
else
{
    <div class="container">
        <div class="row row-cols-lg-3 p-md-4">
        @foreach (Product product in ProductService.Products)
        {
            <div class="col">
                <div class="card" style="width: 18rem;">
                    <a href="/product/@product.Id">
                        <img src="@product.ImageUrl" class="card-img-top" alt="@product.Title">
                    </a>
                    <div class="card-body">
                        <h5 class="card-title">@product.Title</h5>
                        <p class="card-text">@product.Description</p>
                        <a href="/product/@product.Id" class="btn btn-primary">$@product.Price</a>
                    </div>
                </div>
            </div>
        }
        </div>
    </div>
}

@code {
    private static List<Product> Products = new List<Product>();

    protected override async Task OnInitializedAsync()
    {
        await ProductService.GetProducts();
    }
}
